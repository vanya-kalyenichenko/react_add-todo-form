{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","functions/getUserById.tsx","functions/visibleTodos.tsx","api/todos.ts","functions/getMaxId.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","cn","TodoList","todos","map","getUserById","userId","usersFromServer","find","visibleTodos","todoUser","getMaxId","Math","max","App","useState","setTodos","hasTitleError","setHasTitleError","hasSelectError","setHasSelectError","setTitle","select","setSelect","action","method","onSubmit","event","preventDefault","trim","newTodo","prevTodos","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e7c4bb07.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","type UserProps = {\n  user: {\n    id: number;\n    name: string;\n    username: string;\n    email: string;\n  }\n};\n\nexport const UserInfo: React.FC<UserProps> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todos } from '../../types/TodosUsers';\n\ntype Props = {\n  todo: Todos;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    user,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={`${id}`}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todos } from '../../types/TodosUsers';\n\ninterface TodoListProps {\n  todos: Todos[]\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          todo={todo}\n          key={todo.id}\n        />\n      ))}\n    </section>\n  );\n};\n","import usersFromServer from '../api/users';\n\nexport const getUserById = (userId: number) => {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n};\n","import todosFromServer from '../api/todos';\nimport { getUserById } from './getUserById';\n\nexport const visibleTodos = todosFromServer.map(todoUser => (\n  {\n    ...todoUser,\n    user: getUserById(todoUser.userId),\n  }\n));\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { Todos } from '../types/TodosUsers';\n\nexport const getMaxId = (todos: Todos[]) => {\n  const maxId = Math.max(\n    ...todos.map(todo => todo.id),\n  );\n\n  return maxId + 1;\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport { TodoList } from './components/TodoList';\nimport { Todos } from './types/TodosUsers';\nimport { getUserById } from './functions/getUserById';\nimport { visibleTodos } from './functions/visibleTodos';\nimport { getMaxId } from './functions/getMaxId';\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todos[]>(visibleTodos);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasSelectError, setHasSelectError] = useState(false);\n  const [title, setTitle] = useState('');\n  const [select, setSelect] = useState(0);\n\n  const handlerTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handlerSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelect(+event.target.value);\n    setHasSelectError(false);\n  };\n\n  const reset = () => {\n    setHasTitleError(false);\n    setHasSelectError(false);\n    setTitle('');\n    setSelect(0);\n  };\n\n  const submitHandler = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!title.trim());\n    setHasSelectError(!select);\n\n    if (!title.trim() || !select) {\n      return;\n    }\n\n    if (title && select) {\n      const newTodo = {\n        id: getMaxId(todos),\n        title,\n        completed: false,\n        userId: select,\n        user: getUserById(select),\n      };\n\n      setTodos(prevTodos => {\n        return [...prevTodos, newTodo];\n      });\n    }\n\n    reset();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={submitHandler}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">\n            Title:&nbsp;\n          </label>\n\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            id=\"title\"\n            value={title}\n            onChange={handlerTitle}\n          />\n          {hasTitleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"select\">\n            User:&nbsp;\n          </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"select\"\n            value={select}\n            onChange={handlerSelect}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {hasSelectError\n          && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}